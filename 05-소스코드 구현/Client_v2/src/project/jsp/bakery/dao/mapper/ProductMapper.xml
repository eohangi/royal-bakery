<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="ProductMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap type="project.jsp.bakery.model.product" id="product">
	
		<result property="id" column="id" />
		<result property="proClassify" column="pro_classify" />
		<result property="proName" column="pro_name" />
		<result property="proPrice" column="pro_price" />
		<result property="stock" column="stock" />
		<result property="status" column="status" />
		<result property="content" column="content" />
		<result property="kcal" column="kcal" />
		<result property="na" column="na" />
		<result property="sugar" column="sugar" />
		<result property="fat" column="fat" />
		<result property="protein" column="protein" />
		<result property="proImg" column="pro_img" />
		<result property="proEditDate" column="pro_edit_date" />
		<result property="proRegDate" column="pro_reg_date" />
	</resultMap>

	<!-- 제품 저장하기 -->
	<insert id="insertProduct" parameterType="project.jsp.bakery.model.product"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO product (
		pro_classify, pro_name, pro_price, pro_img, stock, status, content,
		kcal, na, sugar, fat, protein, pro_edit_date, pro_reg_date
		) VALUES (
		#{proClassify}
		,#{proName},#{proPrice},#{proImg},#{stock},#{status},#{content},
		#{kcal},#{na},#{sugar},#{fat},#{protein}, now(), now()
		)
	</insert>

	<!-- 제품 목록을 조회한다. -->
	<select parameterType="project.jsp.bakery.model.product"
		resultMap="product" id="selectProductList">
		SELECT id, pro_classify, pro_name, pro_price,
		pro_img, stock, status, content, kcal, na, sugar, fat, protein

		FROM
		product

		WHERE pro_classify=#{proClassify}

		ORDER BY id DESC
		LIMIT
		#{limitStart}, #{listCount}
	</select>

	<!-- 제품 하나에 대한 정보를 조회한다. -->
	<select parameterType="project.jsp.bakery.model.product"
		resultMap="product" id="selectProduct">
		SELECT id, pro_classify, pro_name, pro_price,
		pro_img, stock, status, content, kcal, na, sugar, fat,
		protein,pro_edit_date, pro_reg_date
		FROM product
		WHERE
		pro_classify=#{proClassify} AND id=#{id}
	</select>

	<!-- 전체 제품 수를 조회한다. -->
	<select parameterType="project.jsp.bakery.model.product"
		resultType="int" id="selectProductCount">
		SELECT COUNT(id) FROM product
		WHERE
		pro_classify=#{proClassify}
	</select>

	<!-- 제품 삭제하기 -->
	<delete parameterType="project.jsp.bakery.model.product" id="deleteProduct">
		DELETE FROM product WHERE id=#{id}
	</delete>

	<!-- 제품 정보 수정하기 -->
	<update parameterType="project.jsp.bakery.model.product" id="updateProduct">
		UPDATE product SET
		pro_classify=#{proClassify},
		pro_name=#{proName},
		pro_price=#{proPrice},
		stock=#{stock},
		status=#{status},
		content=#{content},
		kcal=#{kcal},
		na=#{na},
		sugar=#{sugar},
		fat=#{fat},
		protein=#{protein},
		pro_img=#{proImg},
		pro_edit_date=now()
		WHERE id=#{id}
	</update>

</mapper>